#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Mar 22 18:39:18 2023

@author: kagan
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import (FigureCanvasTkAgg, 
NavigationToolbar2Tk)
from scipy import integrate
from tkinter import *

class MyWindow:
    def __init__(self,win):
        self.lbl1 = Label(win, text = 'Hs[m]')
        self.lbl2 = Label(win, text = 'Tz[s]')
        self.lbl3 = Label(win, text = 'Wmin')
        self.lbl4 = Label(win, text = 'Î³')
        self.lbl7 = Label(win, text = 'Wmax')
        self.lbl8 = Label(win, text = 'W Number')
        self.lbl9 = Label(win, text = 'M0')
        self.lbl10 = Label(win, text = 'M1')
        self.lbl11 = Label(win, text = 'M2')
        self.lbl12 = Label(win, text = 'M4')
        self.btn = Button(win, text = 'Calculate')
        self.t1=Entry(bd=1)
        self.t2=Entry()
        self.t3=Entry()
        self.t4=Entry()
        self.t7=Entry()
        self.t8=Entry()
        self.t9=Entry()
        self.t10=Entry()
        self.t11=Entry()
        self.t12=Entry()
        self.lbl1.place(x=60, y=50)
        self.t1.place(x=100, y=50)
        self.lbl2.place(x=60, y=75)
        self.t2.place(x=100, y=75)
        self.lbl3.place(x=60,y=100)
        self.t3.place(x=100,y=100)
        self.lbl4.place(x=60,y=125)
        self.t4.place(x=100,y= 125)
        self.lbl7.place(x=250,y=100)
        self.t7.place(x=290,y=100)
        self.lbl8.place(x=440,y=100)
        self.t8.place(x=500,y=100)
        self.b1 = Button(win, text='Calculate', command=self.calc)
        self.b1.place(x=100, y=150)
        self.t9.place(x=100,y=200)
        self.lbl9.place(x=60,y=200)
        self.t10.place(x=100,y=225)
        self.lbl10.place(x=60,y=225)
        self.t11.place(x=100,y=250)
        self.lbl11.place(x=60,y=250)
        self.lbl12.place(x=60,y=275)
        self.t12.place(x=100,y=275)
    def calc(self):
        self.t9.delete(0, 'end')
        self.t10.delete(0, 'end')
        self.t11.delete(0, 'end')
        self.t12.delete(0, 'end')
        Hs = float(self.t1.get())
        Tz = float(self.t2.get())
        w_min = float(self.t3.get())
        w_max = float(self.t7.get())
        no_w = int(self.t8.get())
        gamma = float(self.t4.get())
        w = np.linspace(w_min,w_max,no_w)
        A_gamma = 1 - 0.287*np.log(gamma)
        Tp = Tz / (0.6673+(0.05037*gamma)-(0.00623*gamma**2)+(0.0003341*gamma**3))
        Wp = 2*np.pi/Tp
        S_pm = (5/16)*((Hs**2*Wp**4)/(w**5))*np.exp((-5/4)*(w/Wp)**(-4))
        sigma = 0.09
        S_j = A_gamma*S_pm*gamma**(np.exp(-0.5*((w-Wp)/(sigma*Wp))**2))
        A= (123*Hs**2)/(Tz**4)
        B= 495/(Tz**4)
        S_ittc = (A / w**5 ) * np.exp(-B/w**4)
        fig = plt.figure(figsize = (6, 4), dpi = 100)
        plt.plot(w,S_j,label='Johnswap')
        plt.plot(w,S_pm,label='Pierson-Moskowitz')
        plt.plot(w,S_ittc,label='ITTC Spectra')
        plt.xlabel("Wave Frequency")
        plt.ylabel('S(w)')
        plt.legend()
        canvas = FigureCanvasTkAgg(fig, master = window)  
        canvas.draw()
        canvas.get_tk_widget().pack()
        toolbar = NavigationToolbar2Tk(canvas,window)
        toolbar.update()
        canvas.get_tk_widget().pack()
        m_0 = integrate.simpson(S_j,w)
        m_1 = integrate.simpson(S_j*w,w)        
        m_2 = integrate.simpson(S_j*w**2,w)
        m_4 = integrate.simpson(S_j*w**4,w)
        self.t9.insert(END, str(m_0))
        self.t10.insert(END, str(m_1))
        self.t11.insert(END, str(m_2))
        self.t12.insert(END, str(m_4))

window=Tk()
mywin=MyWindow(window)
window.title('Wave Spectra Calculator')
window.geometry("1280x700+10+10")
window.mainloop()
